MISP INSTALLATION INSTRUCTIONS Ubuntu 18.04-server
--------------------------------------------------
This document is taken from the original MISP repository, but it is adjusted to my needs.

1/ Minimal Ubuntu install
-------------------------

# Install a minimal Ubuntu 16.04-server system with the software:
- OpenSSH server

# HINT: IPv6 must not (!) be disabled for the redis server
# become root, so you don't need all the sudos ;-)

# Make sure your system is up2date:
sudo apt-get update
sudo apt-get dist-upgrade
sudo apt-get autoremove

2/ Install LAMP & dependencies
------------------------------

# Install the dependencies: (some might already be installed)
sudo apt-get -y install curl gcc git gnupg-agent make python python3 openssl redis-server sudo rng-tools vim zip pv

# Install MariaDB (a MySQL fork/alternative), Apache 2.4 and the postfix mailserver
sudo apt-get -y install mariadb-client mariadb-server apache2 apache2-doc apache2-utils postfix

# Install PHP and dependencies
sudo apt-get -y install libapache2-mod-php php php-cli php-gnupg php-dev php-json 
sudo apt-get -y install php-mysql php-opcache php-readline php-redis php-xml php-mbstring

# Secure the MariaDB installation (hint: accept the standard values)
sudo mysql_secure_installation

# Enable modules, settings, and default of SSL in Apache
sudo a2dismod status
sudo a2enmod ssl
sudo a2enmod rewrite
sudo a2enmod headers
sudo phpenmod redis

# Apply all changes
sudo systemctl restart apache2

3/ MISP code
------------
# Download MISP using git in the /var/www/ directory.
sudo mkdir /var/www/MISP
sudo chown www-data:www-data /var/www/MISP
cd /var/www/MISP
sudo -u www-data git clone https://github.com/MISP/MISP.git /var/www/MISP
sudo -u www-data git submodule init
sudo -u www-data git submodule update
# Make git ignore filesystem permission differences for submodules
sudo -u www-data git submodule foreach git config core.filemode false
# Make git ignore filesystem permission differences
sudo -u www-data git config core.filemode false

# install Mitre's STIX and its dependencies by running the following commands:
sudo apt-get -y install python3-dev python3-pip libxml2-dev libxslt1-dev zlib1g-dev python3-setuptools
cd /var/www/MISP/app/files/scripts
sudo -u www-data git clone https://github.com/CybOXProject/python-cybox.git
sudo -u www-data git clone https://github.com/STIXProject/python-stix.git
cd /var/www/MISP/app/files/scripts/python-cybox
sudo python3 setup.py install
cd /var/www/MISP/app/files/scripts/python-stix
sudo python3 setup.py install

# install mixbox to accomodate the new STIX dependencies:
cd /var/www/MISP/app/files/scripts/
sudo -u www-data git clone https://github.com/CybOXProject/mixbox.git
cd /var/www/MISP/app/files/scripts/mixbox
sudo python3 setup.py install

# install PyMISP
cd /var/www/MISP/PyMISP
sudo python3 setup.py install

# install support for STIX 2.0
sudo pip3 install stix2

4/ CakePHP
-----------

# Once done, install CakeResque along with its dependencies if you intend to use the built in background jobs:
cd /var/www/MISP/app
sudo chown -R www-data:www-data /var/www/MISP
sudo -u www-data php composer.phar require kamisama/cake-resque:4.1.2
sudo -u www-data php composer.phar config vendor-dir Vendor
sudo -u www-data php composer.phar install

# To use the scheduler worker for scheduled tasks, do the following:
sudo -u www-data cp -fa /var/www/MISP/INSTALL/setup/config.php /var/www/MISP/app/Plugin/CakeResque/Config/config.php

# If you have multiple MISP instances on the same system, don't forget to have a different Redis per 
# MISP instance for the CakeResque workers
# The default Redis port can be updated in Plugin/CakeResque/Config/config.php

5/ Set the permissions
----------------------

# Check if the permissions are set correctly using the following commands:
sudo chown -R www-data:www-data /var/www/MISP
sudo chmod -R 750 /var/www/MISP
sudo chmod -R g+ws /var/www/MISP/app/tmp
sudo chmod -R g+ws /var/www/MISP/app/files
sudo chmod -R g+ws /var/www/MISP/app/files/scripts/tmp


6/ Create a database and user
-----------------------------
# (Put a blank in front of the commands - they will not be saved to bash history)
  mysql -e "CREATE DATABASE misp;"
  mysql -e "grant usage on *.* to misp@localhost identified by 'XXXXdbpasswordhereXXXXX';"
  mysql -e "grant all privileges on misp.* to misp@localhost;"

# Import the empty MISP database from MYSQL.sql
sudo pv /var/www/MISP/INSTALL/MYSQL.sql |mysql -u root misp


7/ Apache configuration
-----------------------

# We will create/etc/apache2/sites-available/misp.conf now via a HERE-DOC
# a) copy the text below
# b) paste the copied text into the terminal and hit enter
# c) adjust the our.fqdn.here.com with your fqdn (e.g. www.example.com)

####COPY FROM HERE UNTIL "END COPY HERE"####
cat <<EOF >/etc/apache2/sites-available/misp.conf
<VirtualHost _default_:80>
  Redirect permanent / https://your.fqdn.here.com/
  LogLevel warn
  ErrorLog /var/log/apache2/misp.local_error.log
CustomLog /var/log/apache2/misp.local_access.log combined
</Virtualhost>

<VirtualHost _default_:443>
        ServerName your.fqdn.here.com
        DocumentRoot /var/www/MISP/app/webroot
        
        SSLEngine on
        SSLCertificateFile      /etc/ssl/certs/ssl-cert-snakeoil.pem
        SSLCertificateKeyFile /etc/ssl/private/ssl-cert-snakeoil.key

        ErrorLog /var/log/apache2/misp-tls.log
        CustomLog /var/log/apache2/misp-tls.log combined

        <Directory /var/www/MISP/app/webroot>
                Options -Indexes
                AllowOverride all
                Order allow,deny
                allow from all
        </Directory>
</VirtualHost>
EOF
####END COPY HERE####

sudo a2dissite 000-default default-ssl
sudo a2ensite misp
sudo systemctl restart apache2

8/ Log rotation
---------------
# MISP saves the stdout and stderr of its workers in /var/www/MISP/app/tmp/logs
# To rotate these logs install the supplied logrotate script:

sudo cp /var/www/MISP/INSTALL/misp.logrotate /etc/logrotate.d/misp
chmod 0644 /etc/logrotate.d/misp

9/ MISP configuration
---------------------
# There are 4 sample configuration files in /var/www/MISP/app/Config that need to be copied
sudo -u www-data cp -a /var/www/MISP/app/Config/bootstrap.default.php /var/www/MISP/app/Config/bootstrap.php
sudo -u www-data cp -a /var/www/MISP/app/Config/database.default.php /var/www/MISP/app/Config/database.php
sudo -u www-data cp -a /var/www/MISP/app/Config/core.default.php /var/www/MISP/app/Config/core.php
sudo -u www-data cp -a /var/www/MISP/app/Config/config.default.php /var/www/MISP/app/Config/config.php

# Configure the fields in the newly created files:
# Option 1 - Texteditor: sudo -u www-data vim /var/www/MISP/app/Config/database.php

# Option 2 - sed:
sed -i 's/db login/misp/' /var/www/MISP/app/Config/database.php
sed -i 's/db password/XXXXdbpasswordhereXXXXX/' /var/www/MISP/app/Config/database.php

# Important! Change the salt key in /var/www/MISP/app/Config/config.php
# The salt key must be a string at least 32 bytes long.
# The admin user account will be generated on the first login, 
# make sure that the salt is changed before you create that user
# If you forget to do this step, and you are still dealing with a fresh installation, just alter the salt,
# delete the user from mysql and log in again using the default admin credentials (admin@admin.test / admin)

#https://pythontips.com/2013/07/28/generating-a-random-string/

salt=$(python -c "import string, random; random = ''.join([random.choice(string.ascii_letters + string.digits) for n in xrange(32)]); print random")
echo $salt
#IMPORTANT: change it manually in /var/www/MISP/app/Config/config.php

# Change base url in config.php
/var/www/MISP/app/Console/cake Baseurl https://<your.FQDN.here>
# alternatively, you can leave this field empty if you would like to use relative pathing in MISP

# and make sure the file permissions are still OK
sudo chown -R www-data:www-data /var/www/MISP/app/Config
sudo chmod -R 750 /var/www/MISP/app/Config

# Generate a GPG encryption key.
sudo -u www-data mkdir /var/www/MISP/.gnupg
sudo chmod 700 /var/www/MISP/.gnupg

# https://github.com/MISP/MISP/issues/2372
ls -l $(tty)
chown www-data $(tty)

sudo -u www-data gpg --homedir /var/www/MISP/.gnupg --gen-key
# NOTE: if entropy is not high enough run 
# rngd -r /dev/urandom 
# in a second terminal window do fix it quickly

# The email address should match the one set in the /var/www/MISP/app/Config/config.php
# you can set it later in the web frontend

# list the key
sudo -u www-data sh -c "gpg --homedir /var/www/MISP/.gnupg --list-key"
# And export the public key to the webroot
sudo -u www-data sh -c "gpg --homedir /var/www/MISP/.gnupg --export --armor YOUR-KEYS-EMAIL-HERE > /var/www/MISP/app/webroot/gpg.asc"

# To make the background workers start on boot
sudo chmod +x /var/www/MISP/app/Console/worker/start.sh
printf "@reboot\t\t		www-data\t	/var/www/MISP/app/Console/worker/start.sh\n" >>/etc/crontab

# 10/ PHP Settings

sed -i 's/max_execution_time = 30/max_execution_time = 300/' /etc/php/7.2/apache2/php.ini 
sed -i 's/memory_limit = 128M/memory_limit = 512M/' /etc/php/7.2/apache2/php.ini 
sed -i 's/upload_max_filesize = 2M/upload_max_filesize = 50M/' /etc/php/7.2/apache2/php.ini
sed -i 's/post_max_size = 8M/post_max_size = 50M/' /etc/php/7.2/apache2/php.ini 

Optional: Use Redis as PHP Session Store

/etc/php/7.2/apache2/php.ini 
Find the following lines and change them:
# session.save_handler = files
session.save_handler = redis
session.save_path = "tcp://127.0.0.1:6379"

# 11/ Start Workers and Restart

# last restart for now
systemctl restart apache2

# start the workers
sudo -u www-data /var/www/MISP/app/Console/worker/start.sh

# 12/ Optional: Shortcut to logs

ln -s /var/www/MISP/app/tmp/logs /var/log/misp

# 13/ Finished

# Now log in using the webinterface:
# The default user/pass = admin@admin.test/admin

# 14/ Optional - Advanced Attachment Handler

apt install libfuzzy-dev
pip3 install git+https://github.com/kbandla/pydeep.git
pip3 install python-magic
pip3 install lief


# 15/ Notes

# Using the server settings tool in the admin interface (Administration -> Server Settings & Maintenance), set MISP up to your preference
# It is especially vital that no critical issues remain!
# start the workers by navigating to the workers tab and clicking restart all workers

# Don't forget to change the email, password and authentication key after installation.

# Once done, have a look at the Administration -> Server Maintenance & Settings -> Diagnostics

# If any of the directories that MISP uses to store files is not writeable to the apache user, change the permissions
# you can do this by running the following commands:

sudo chmod -R 750 /var/www/MISP/<directory path with an indicated issue>
sudo chown -R www-data:www-data /var/www/MISP/<directory path with an indicated issue>

# Make sure that the STIX libraries and GnuPG work as intended, if not, refer to INSTALL.txt's paragraphs dealing with these two items

# If anything goes wrong, make sure that you check MISP's logs for errors:
# /var/www/MISP/app/tmp/logs/error.log
# /var/www/MISP/app/tmp/logs/resque-worker-error.log
# /var/www/MISP/app/tmp/logs/resque-scheduler-error.log
# /var/www/MISP/app/tmp/logs/resque-2015-01-01.log // where the actual date is the current date


Recommended actions
-------------------
- By default CakePHP exposes its name and version in email headers. Apply a patch to remove this behavior.

- You should really harden your OS
- You should really harden the configuration of Apache
- You should really harden the configuration of MySQL/MariaDB
- Keep your software up2date (OS, MISP, CakePHP and everything else)
- Log and audit


Optional features
-----------------
# MISP has a new pub/sub feature, using ZeroMQ. To enable it, simply run the following command
sudo pip3 install pyzmq
# ZeroMQ depends on the Python client for Redis
sudo pip3 install redis

# For the experimental ssdeep correlations, run the following installation:
# installing ssdeep
wget http://downloads.sourceforge.net/project/ssdeep/ssdeep-2.13/ssdeep-2.13.tar.gz
tar zxvf ssdeep-2.13.tar.gz
cd ssdeep-2.13
./configure
make
sudo make install
ssdeep -h # test

#installing ssdeep_php
sudo pecl install ssdeep

# You should add "extension=ssdeep.so" to mods-available - Check /etc/php for your current version
echo "extension=ssdeep.so" | sudo tee /etc/php/7.2/mods-available/ssdeep.ini
sudo phpenmod ssdeep
sudo service apache2 restart

Optional features: misp-modules
-------------------------------
# If you want to add the misp modules functionality, follow the setup procedure described in misp-modules:
# https://github.com/MISP/misp-modules#how-to-install-and-start-misp-modules
# Then the enrichment, export and import modules can be enabled in MISP via the settings.

